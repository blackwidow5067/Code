pipeline {
    agent any
    environment{
        //MAVEN_HOME='usr/share/maven'
        SONAR_SCANNER=tool 'SonarScanner'
        GITHUB_Credentials='githubtk'
    }

    stages {
        stage('checkout') {
            steps {
                echo 'Checkout from github repository'
                git url:'https://github.com/blackwidow5067/webapp',credentialsId:GITHUB_Credentials,branch:'master'
            }
        }
        stage('Compile') {
            steps {
                echo 'Compiling'
                sh 'mvn compile'
            }
        }//compile
        stage('test') {
            steps {
                echo 'Testing'
                sh 'mvn test'
            }
        }//test
        stage('build') {
            steps {
                echo 'Package'
                sh 'mvn package -DskipTests=true'
            }
        }//build
        stage('Quality Check') {
            steps {
                echo 'Quality Check'
                withSonarQubeEnv('sonar'){
                    sh '''mvn clean verify sonar:sonar\
                    -Dsonar.projectKey=MyProjectKey\
                    -Dsonar.projectName=Project2july\
                    -Dsonar.projectVersion=1.0\
                    -Dsonar.source=src/main/webapp\
                    -Dsonar.java.binaries=target/classes\
                    -Dsonar.host.url=http://localhost:9000
                    '''
                }
            }
        }//QualityCheck
        stage('UAT - Functional test -- Deploy to Tomcat') {
            steps {
                echo 'Tomcat'
                sh 'mvn package -DskipTests=true'
                deploy adapters:[tomcat8(url:'http://localhost:5050/',credentialsId:'tomcat')],war:"target/*.war",contextPath:'julyApp'
            }
        }//Tomcat
        stage('Publish Artifact') {
            steps {
                script{
                    def server=Artifactory.server('artifactory')
                    def rtMaven=Artifactory.newMavenBuild()
                    rtMaven.resolver server:server, releaseRepo:'maven-libs-release/',snapshotRepo:'maven-libs-snapshot/'
                    rtMaven.deployer server:server, releaseRepo:'maven-libs-release-local/',snapshotRepo:'maven-libs-snapshot-local/'
                    
                    rtMaven.tool='Apache Maven 3.8.7'
                    def buildInfo=rtMaven.run pom:'pom.xml',goals:'install'
                    server.publishBuildInfo buildInfo
                }
            }
        }//jfrog
    }
    post{
        success{
            echo "notify stakeholders when success"
        }
        unstable{
            echo "notify test engineers"
        }
        failure{
            echo "notify failure status to applicable stakeholders"
        }
        changed{
            echo "notify something changed.."
        }
        always{
            echo "Clean/wrapup/notify...always"
        }
    }
}


